// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  password      String?
  username          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  kanri_flg      String?
  Roadmaps       Roadmap[]
  accounts      Account[]
  sessions      Session[]
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Roadmap {
  id          Int    @id @default(autoincrement())
  title       String
  description String?
  userId      String
  User        User   @relation(fields: [userId], references: [id])
  Cards       Card[]
}

model Card {
  id           Int     @id @default(autoincrement())
  title        String
  content      String?
  roadmapId    Int
  isCompleted  Boolean @default(false)
  parentId     Int?
  Roadmap      Roadmap @relation(fields: [roadmapId], references: [id])
  SubCards     Card[]  @relation("CardToCard")
  ParentCard   Card?   @relation("CardToCard", fields: [parentId], references: [id])
}
